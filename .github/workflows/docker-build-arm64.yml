name: Build and Push rust base (Multi-Arch)
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag'
        required: true
        default: '1.89-slim-bookworm'
  workflow_run:
    workflows: ["Build RocksDB Multi-Arch"]
    types:
      - completed
jobs:
  build_amd64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push rust_ci image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockers/rust_ci/Dockerfile
          push: true
          platforms: linux/amd64
          tags: chandlersong/rust_ci:${{ inputs.image_tag }}-amd64
          build-args: |
            LIBDIR=x86_64-linux-gnu
      - name: Build and push rust_runtime image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockers/rust_runtime/Dockerfile
          push: true
          platforms: linux/amd64
          tags: chandlersong/rust_runtime:${{ inputs.image_tag }}-amd64
          build-args: |
            LIBDIR=x86_64-linux-gnu
  build_rust_arm64:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push rust_ci image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockers/rust_ci/Dockerfile
          push: true
          platforms: linux/arm64
          tags: chandlersong/rust_ci:${{ inputs.image_tag }}-arm64
          build-args: |
            LIBDIR=aarch64-linux-gnu
      - name: Build and push rust_runtime image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockers/rust_runtime/Dockerfile
          push: true
          platforms: linux/arm64
          tags: chandlersong/rust_runtime:${{ inputs.image_tag }}-arm64
          build-args: |
            LIBDIR=aarch64-linux-gnu
  build_manifest:
    runs-on: ubuntu-latest
    needs: [build_amd64, build_rust_arm64]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push multi-arch manifest for rust_ci
        run: |
          docker buildx imagetools create --tag chandlersong/rust_ci:${{ inputs.image_tag }} \
            chandlersong/rust_ci:${{ inputs.image_tag }}-amd64 \
            chandlersong/rust_ci:${{ inputs.image_tag }}-arm64

      - name: Create and push multi-arch manifest for rust_runtime
        run: |
          docker buildx imagetools create --tag chandlersong/rust_runtime:${{ inputs.image_tag }} \
            chandlersong/rust_runtime:${{ inputs.image_tag }}-amd64 \
            chandlersong/rust_runtime:${{ inputs.image_tag }}-arm64
